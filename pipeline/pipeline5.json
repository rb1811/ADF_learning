{
	"name": "pipeline5",
	"properties": {
		"activities": [
			{
				"name": "GetMetadataFolder",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Web2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "pipeline3",
						"type": "DatasetReference",
						"parameters": {
							"DFoldername": {
								"value": "@pipeline().parameters.SFoldername",
								"type": "Expression"
							},
							"DFilename": " "
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filter1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter1').output.Value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().type,'File')",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Copy data1",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "Delete1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "BinarySource",
												"storeSettings": {
													"type": "AzureBlobStorageReadSettings",
													"recursive": true
												},
												"formatSettings": {
													"type": "BinaryReadSettings"
												}
											},
											"sink": {
												"type": "BinarySink",
												"storeSettings": {
													"type": "AzureBlobStorageWriteSettings"
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "pipeline3",
												"type": "DatasetReference",
												"parameters": {
													"DFoldername": {
														"value": "@pipeline().parameters.SFoldername",
														"type": "Expression"
													},
													"DFilename": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "pipeline3",
												"type": "DatasetReference",
												"parameters": {
													"DFoldername": {
														"value": "@last(split(item().name, '.'))",
														"type": "Expression"
													},
													"DFilename": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "Delete1",
										"type": "Delete",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"dataset": {
												"referenceName": "pipeline3",
												"type": "DatasetReference",
												"parameters": {
													"DFoldername": "@last(split(item().name, '.'))",
													"DFilename": "*"
												}
											},
											"logStorageSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobStorage1",
													"type": "LinkedServiceReference"
												},
												"path": "json"
											},
											"enableLogging": true,
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"maxConcurrentConnections": 2,
												"recursive": true,
												"wildcardFileName": "*",
												"enablePartitionDiscovery": false
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Filter1",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "GetMetadataFolder",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetMetadataFolder').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@not(equals(last(split(item().name, '.')), 'txt'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Web1",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Until1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://dummy.restapiexample.com/api/v1/employees",
					"method": "GET"
				}
			},
			{
				"name": "Web2",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Web1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://rb1811sa1.blob.core.windows.net/json/source2/blobfilename.json?sp=racwl&st=2023-03-17T01:18:21Z&se=2023-05-17T09:18:21Z&spr=https&sv=2021-12-02&sr=c&sig=FQwDG02VgyoXmq%2FlSs21W%2FhjjcEYWss7NOJva4QLT6o%3D",
					"method": "PUT",
					"headers": {
						"x-ms-blob-type": "BlockBlob"
					},
					"body": {
						"value": "@activity('Web1').output",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Until1",
				"type": "Until",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@variables('triggerFileName')",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "CheckFileExists",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "pipeline3",
									"type": "DatasetReference",
									"parameters": {
										"DFoldername": {
											"value": "@pipeline().parameters.SFoldername",
											"type": "Expression"
										},
										"DFilename": "t.txt"
									}
								},
								"fieldList": [
									"exists"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							}
						},
						{
							"name": "If Condition2",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "CheckFileExists",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@activity('CheckFileExists').output.exists",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Wait1",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 5
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Set variable1",
										"type": "SetVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "triggerFileName",
											"value": {
												"value": "@bool(1)",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					],
					"timeout": "0.12:00:00"
				}
			}
		],
		"parameters": {
			"SFoldername": {
				"type": "string"
			}
		},
		"variables": {
			"Dfoldername": {
				"type": "String"
			},
			"triggerFileName": {
				"type": "Boolean",
				"defaultValue": false
			}
		},
		"annotations": [],
		"lastPublishTime": "2023-03-18T01:19:27Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}